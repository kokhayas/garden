plugins {
    id 'java-library'
    id 'ca.coglinc2.javacc' version '3.0.0'
    id 'eclipse'
}

compileJava.options.encoding = 'UTF-8'

repositories {
    jcenter()
}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.1-jre'

    // Use JUnit test framework
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.0'
    testImplementation 'org.hamcrest:hamcrest:2.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.0'
    
    // This dependency is include in the jar, that is to say found on their compile classpath.
    extraLibs 'org.apache.commons:commons-math3:3.6.1'
}

sourceSets {
	main {
		java {
			srcDir compileJavacc.outputDirectory
			srcDir compileJjtree.outputDirectory
		}
	}
	jjtree {
		java {
			srcDir 'src/main/jjtree'
		}
	}
}

eclipseClasspath.dependsOn("compileJavacc")
eclipseClasspath.dependsOn("compileJjtree")

test {
    useJUnitPlatform()
}

task fatJar(type: Jar) {
    archiveName = 'Zipc_Parser.jar'
	from {
		configurations.extraLibs.collect {
			it.isDirectory() ? it : zipTree(it)
		}
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    with jar
}
